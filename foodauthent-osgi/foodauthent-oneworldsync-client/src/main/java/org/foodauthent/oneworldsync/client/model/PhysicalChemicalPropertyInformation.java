/*
 * 1WorldSync Content1 API
 * Content1 will provide access to accurate, trusted product data sourced directly from the Brand Owners through 1WorldSyncâ€™s APIs. This full set of product information is readily available to you through a set of web services, allowing you to get up-to-date, complete product information. <br/><br/>The following APIs are available<ul><li>Product Search API - Performs a search against the product data published in ContentNOW to find products that meet the supplied criteria. For each search result displayed, a basic set of information about the product is provided. While performing a product search only a subset from the entire list of attributes for an item will be returned.</li><li>Product Fetch API - Once a Product Search has been performed, the full set of atrribute information on a given product can be retrieved using the Product Fetch API and the item reference id (obtained through the search).</li></ul><p>This tool features a fully functional form which will call the Content1 API in real time.  To unlock the API call, you must have your client secret key provided through <a href=\"#\" onclick=\"openWindow('https://developer.1worldsync.com', 'Content1')\">developer.1worldsync.com</a>. Enter that key in the top right of this page to unlock the API calls used below.</p><p>Don't have a key but want to read the documenation? Go ahead! Basic API documentation is provided below.</p><div style=\"border: 1px solid transparent;color:#fff;background-color: #00ACC8;padding-left: 10px;height:30px;font-weight:bold;font-size:1.3em;margin:0;font-family: ProximaNova;padding-top:10px\">Search and Fetch Model Schemas</div><ul><li><a href=\"../doc/1WorldSync_Content1_Product_Search_Model_Schema_Guide_v3.1.6.1.pdf\" target=\"_blank\">Search Model Schema</a></li><li><a href=\"../doc/1WorldSync_Content1_Product_Fetch_Model_Schema_Guide_v3.1.6.6.pdf\" target=\"_blank\">Fetch Model Schema</a> </li></ul>
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.foodauthent.oneworldsync.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.foodauthent.oneworldsync.client.model.CodifiedValue;
import org.foodauthent.oneworldsync.client.model.FlashPoint;
import org.foodauthent.oneworldsync.client.model.LanguageLabels;
import org.foodauthent.oneworldsync.client.model.PHInformation;
import org.foodauthent.oneworldsync.client.model.QualifiedValues;
import org.foodauthent.oneworldsync.client.model.SpecificGravityInformation;

/**
 * PhysicalChemicalPropertyInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-25T20:10:55.785Z")
public class PhysicalChemicalPropertyInformation {
	@JsonProperty("autoIgnitionTemperature")
	private QualifiedValues autoIgnitionTemperature = null;

	@JsonProperty("boilingPoint")
	private QualifiedValues boilingPoint = null;

	@JsonProperty("flashPoint")
	private List<FlashPoint> flashPoint = null;

	@JsonProperty("freezingMeltingPoint")
	private QualifiedValues freezingMeltingPoint = null;

	@JsonProperty("lowerExplosiveLimit")
	private String lowerExplosiveLimit = null;

	@JsonProperty("pHInformation")
	private List<PHInformation> pHInformation = null;

	@JsonProperty("physicalFormDescription")
	private LanguageLabels physicalFormDescription = null;

	@JsonProperty("physicalStateCode")
	private CodifiedValue physicalStateCode = null;

	@JsonProperty("specificGravityInformation")
	private List<SpecificGravityInformation> specificGravityInformation = null;

	@JsonProperty("upperExplosiveLimit")
	private String upperExplosiveLimit = null;

	@JsonProperty("waterSolubilityTypeCode")
	private CodifiedValue waterSolubilityTypeCode = null;

	public PhysicalChemicalPropertyInformation autoIgnitionTemperature(QualifiedValues autoIgnitionTemperature) {
		this.autoIgnitionTemperature = autoIgnitionTemperature;
		return this;
	}

	/**
	 * Get autoIgnitionTemperature
	 * 
	 * @return autoIgnitionTemperature
	 **/
	@ApiModelProperty(value = "")
	public QualifiedValues getAutoIgnitionTemperature() {
		return autoIgnitionTemperature;
	}

	public void setAutoIgnitionTemperature(QualifiedValues autoIgnitionTemperature) {
		this.autoIgnitionTemperature = autoIgnitionTemperature;
	}

	public PhysicalChemicalPropertyInformation boilingPoint(QualifiedValues boilingPoint) {
		this.boilingPoint = boilingPoint;
		return this;
	}

	/**
	 * Get boilingPoint
	 * 
	 * @return boilingPoint
	 **/
	@ApiModelProperty(value = "")
	public QualifiedValues getBoilingPoint() {
		return boilingPoint;
	}

	public void setBoilingPoint(QualifiedValues boilingPoint) {
		this.boilingPoint = boilingPoint;
	}

	public PhysicalChemicalPropertyInformation flashPoint(List<FlashPoint> flashPoint) {
		this.flashPoint = flashPoint;
		return this;
	}

	public PhysicalChemicalPropertyInformation addFlashPointItem(FlashPoint flashPointItem) {
		if (this.flashPoint == null) {
			this.flashPoint = new ArrayList<FlashPoint>();
		}
		this.flashPoint.add(flashPointItem);
		return this;
	}

	/**
	 * Get flashPoint
	 * 
	 * @return flashPoint
	 **/
	@ApiModelProperty(value = "")
	public List<FlashPoint> getFlashPoint() {
		return flashPoint;
	}

	public void setFlashPoint(List<FlashPoint> flashPoint) {
		this.flashPoint = flashPoint;
	}

	public PhysicalChemicalPropertyInformation freezingMeltingPoint(QualifiedValues freezingMeltingPoint) {
		this.freezingMeltingPoint = freezingMeltingPoint;
		return this;
	}

	/**
	 * Get freezingMeltingPoint
	 * 
	 * @return freezingMeltingPoint
	 **/
	@ApiModelProperty(value = "")
	public QualifiedValues getFreezingMeltingPoint() {
		return freezingMeltingPoint;
	}

	public void setFreezingMeltingPoint(QualifiedValues freezingMeltingPoint) {
		this.freezingMeltingPoint = freezingMeltingPoint;
	}

	public PhysicalChemicalPropertyInformation lowerExplosiveLimit(String lowerExplosiveLimit) {
		this.lowerExplosiveLimit = lowerExplosiveLimit;
		return this;
	}

	/**
	 * Get lowerExplosiveLimit
	 * 
	 * @return lowerExplosiveLimit
	 **/
	@ApiModelProperty(value = "")
	public String getLowerExplosiveLimit() {
		return lowerExplosiveLimit;
	}

	public void setLowerExplosiveLimit(String lowerExplosiveLimit) {
		this.lowerExplosiveLimit = lowerExplosiveLimit;
	}

	public PhysicalChemicalPropertyInformation pHInformation(List<PHInformation> pHInformation) {
		this.pHInformation = pHInformation;
		return this;
	}

	public PhysicalChemicalPropertyInformation addPHInformationItem(PHInformation pHInformationItem) {
		if (this.pHInformation == null) {
			this.pHInformation = new ArrayList<PHInformation>();
		}
		this.pHInformation.add(pHInformationItem);
		return this;
	}

	/**
	 * Get pHInformation
	 * 
	 * @return pHInformation
	 **/
	@ApiModelProperty(value = "")
	public List<PHInformation> getPHInformation() {
		return pHInformation;
	}

	public void setPHInformation(List<PHInformation> pHInformation) {
		this.pHInformation = pHInformation;
	}

	public PhysicalChemicalPropertyInformation physicalFormDescription(LanguageLabels physicalFormDescription) {
		this.physicalFormDescription = physicalFormDescription;
		return this;
	}

	/**
	 * Get physicalFormDescription
	 * 
	 * @return physicalFormDescription
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getPhysicalFormDescription() {
		return physicalFormDescription;
	}

	public void setPhysicalFormDescription(LanguageLabels physicalFormDescription) {
		this.physicalFormDescription = physicalFormDescription;
	}

	public PhysicalChemicalPropertyInformation physicalStateCode(CodifiedValue physicalStateCode) {
		this.physicalStateCode = physicalStateCode;
		return this;
	}

	/**
	 * Get physicalStateCode
	 * 
	 * @return physicalStateCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getPhysicalStateCode() {
		return physicalStateCode;
	}

	public void setPhysicalStateCode(CodifiedValue physicalStateCode) {
		this.physicalStateCode = physicalStateCode;
	}

	public PhysicalChemicalPropertyInformation specificGravityInformation(
			List<SpecificGravityInformation> specificGravityInformation) {
		this.specificGravityInformation = specificGravityInformation;
		return this;
	}

	public PhysicalChemicalPropertyInformation addSpecificGravityInformationItem(
			SpecificGravityInformation specificGravityInformationItem) {
		if (this.specificGravityInformation == null) {
			this.specificGravityInformation = new ArrayList<SpecificGravityInformation>();
		}
		this.specificGravityInformation.add(specificGravityInformationItem);
		return this;
	}

	/**
	 * Get specificGravityInformation
	 * 
	 * @return specificGravityInformation
	 **/
	@ApiModelProperty(value = "")
	public List<SpecificGravityInformation> getSpecificGravityInformation() {
		return specificGravityInformation;
	}

	public void setSpecificGravityInformation(List<SpecificGravityInformation> specificGravityInformation) {
		this.specificGravityInformation = specificGravityInformation;
	}

	public PhysicalChemicalPropertyInformation upperExplosiveLimit(String upperExplosiveLimit) {
		this.upperExplosiveLimit = upperExplosiveLimit;
		return this;
	}

	/**
	 * Get upperExplosiveLimit
	 * 
	 * @return upperExplosiveLimit
	 **/
	@ApiModelProperty(value = "")
	public String getUpperExplosiveLimit() {
		return upperExplosiveLimit;
	}

	public void setUpperExplosiveLimit(String upperExplosiveLimit) {
		this.upperExplosiveLimit = upperExplosiveLimit;
	}

	public PhysicalChemicalPropertyInformation waterSolubilityTypeCode(CodifiedValue waterSolubilityTypeCode) {
		this.waterSolubilityTypeCode = waterSolubilityTypeCode;
		return this;
	}

	/**
	 * Get waterSolubilityTypeCode
	 * 
	 * @return waterSolubilityTypeCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getWaterSolubilityTypeCode() {
		return waterSolubilityTypeCode;
	}

	public void setWaterSolubilityTypeCode(CodifiedValue waterSolubilityTypeCode) {
		this.waterSolubilityTypeCode = waterSolubilityTypeCode;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		PhysicalChemicalPropertyInformation physicalChemicalPropertyInformation = (PhysicalChemicalPropertyInformation) o;
		return Objects.equals(this.autoIgnitionTemperature, physicalChemicalPropertyInformation.autoIgnitionTemperature)
				&& Objects.equals(this.boilingPoint, physicalChemicalPropertyInformation.boilingPoint)
				&& Objects.equals(this.flashPoint, physicalChemicalPropertyInformation.flashPoint)
				&& Objects.equals(this.freezingMeltingPoint, physicalChemicalPropertyInformation.freezingMeltingPoint)
				&& Objects.equals(this.lowerExplosiveLimit, physicalChemicalPropertyInformation.lowerExplosiveLimit)
				&& Objects.equals(this.pHInformation, physicalChemicalPropertyInformation.pHInformation)
				&& Objects.equals(this.physicalFormDescription,
						physicalChemicalPropertyInformation.physicalFormDescription)
				&& Objects.equals(this.physicalStateCode, physicalChemicalPropertyInformation.physicalStateCode)
				&& Objects.equals(this.specificGravityInformation,
						physicalChemicalPropertyInformation.specificGravityInformation)
				&& Objects.equals(this.upperExplosiveLimit, physicalChemicalPropertyInformation.upperExplosiveLimit)
				&& Objects.equals(this.waterSolubilityTypeCode,
						physicalChemicalPropertyInformation.waterSolubilityTypeCode);
	}

	@Override
	public int hashCode() {
		return Objects.hash(autoIgnitionTemperature, boilingPoint, flashPoint, freezingMeltingPoint,
				lowerExplosiveLimit, pHInformation, physicalFormDescription, physicalStateCode,
				specificGravityInformation, upperExplosiveLimit, waterSolubilityTypeCode);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class PhysicalChemicalPropertyInformation {\n");

		sb.append("    autoIgnitionTemperature: ").append(toIndentedString(autoIgnitionTemperature)).append("\n");
		sb.append("    boilingPoint: ").append(toIndentedString(boilingPoint)).append("\n");
		sb.append("    flashPoint: ").append(toIndentedString(flashPoint)).append("\n");
		sb.append("    freezingMeltingPoint: ").append(toIndentedString(freezingMeltingPoint)).append("\n");
		sb.append("    lowerExplosiveLimit: ").append(toIndentedString(lowerExplosiveLimit)).append("\n");
		sb.append("    pHInformation: ").append(toIndentedString(pHInformation)).append("\n");
		sb.append("    physicalFormDescription: ").append(toIndentedString(physicalFormDescription)).append("\n");
		sb.append("    physicalStateCode: ").append(toIndentedString(physicalStateCode)).append("\n");
		sb.append("    specificGravityInformation: ").append(toIndentedString(specificGravityInformation)).append("\n");
		sb.append("    upperExplosiveLimit: ").append(toIndentedString(upperExplosiveLimit)).append("\n");
		sb.append("    waterSolubilityTypeCode: ").append(toIndentedString(waterSolubilityTypeCode)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}

/*
 * 1WorldSync Content1 API
 * Content1 will provide access to accurate, trusted product data sourced directly from the Brand Owners through 1WorldSyncâ€™s APIs. This full set of product information is readily available to you through a set of web services, allowing you to get up-to-date, complete product information. <br/><br/>The following APIs are available<ul><li>Product Search API - Performs a search against the product data published in ContentNOW to find products that meet the supplied criteria. For each search result displayed, a basic set of information about the product is provided. While performing a product search only a subset from the entire list of attributes for an item will be returned.</li><li>Product Fetch API - Once a Product Search has been performed, the full set of atrribute information on a given product can be retrieved using the Product Fetch API and the item reference id (obtained through the search).</li></ul><p>This tool features a fully functional form which will call the Content1 API in real time.  To unlock the API call, you must have your client secret key provided through <a href=\"#\" onclick=\"openWindow('https://developer.1worldsync.com', 'Content1')\">developer.1worldsync.com</a>. Enter that key in the top right of this page to unlock the API calls used below.</p><p>Don't have a key but want to read the documenation? Go ahead! Basic API documentation is provided below.</p><div style=\"border: 1px solid transparent;color:#fff;background-color: #00ACC8;padding-left: 10px;height:30px;font-weight:bold;font-size:1.3em;margin:0;font-family: ProximaNova;padding-top:10px\">Search and Fetch Model Schemas</div><ul><li><a href=\"../doc/1WorldSync_Content1_Product_Search_Model_Schema_Guide_v3.1.6.1.pdf\" target=\"_blank\">Search Model Schema</a></li><li><a href=\"../doc/1WorldSync_Content1_Product_Fetch_Model_Schema_Guide_v3.1.6.6.pdf\" target=\"_blank\">Fetch Model Schema</a> </li></ul>
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.foodauthent.oneworldsync.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.foodauthent.oneworldsync.client.model.AspectRatioInformation;
import org.foodauthent.oneworldsync.client.model.CodifiedValue;
import org.foodauthent.oneworldsync.client.model.QualifiedValues;

/**
 * DisplayScreenInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-25T20:10:55.785Z")
public class DisplayScreenInformation {
	@JsonProperty("aspectRatioInformation")
	private AspectRatioInformation aspectRatioInformation = null;

	@JsonProperty("displayPanelBacklightType")
	private String displayPanelBacklightType = null;

	@JsonProperty("displayResolutionCode")
	private CodifiedValue displayResolutionCode = null;

	@JsonProperty("displayScreenBezelSize")
	private QualifiedValues displayScreenBezelSize = null;

	@JsonProperty("displayScreenSize")
	private QualifiedValues displayScreenSize = null;

	@JsonProperty("displayScreenTypeCode")
	private CodifiedValue displayScreenTypeCode = null;

	@JsonProperty("horizontalViewingAngle")
	private String horizontalViewingAngle = null;

	@JsonProperty("totalScreenArea")
	private QualifiedValues totalScreenArea = null;

	@JsonProperty("verticalViewingAngle")
	private String verticalViewingAngle = null;

	public DisplayScreenInformation aspectRatioInformation(AspectRatioInformation aspectRatioInformation) {
		this.aspectRatioInformation = aspectRatioInformation;
		return this;
	}

	/**
	 * Get aspectRatioInformation
	 * 
	 * @return aspectRatioInformation
	 **/
	@ApiModelProperty(value = "")
	public AspectRatioInformation getAspectRatioInformation() {
		return aspectRatioInformation;
	}

	public void setAspectRatioInformation(AspectRatioInformation aspectRatioInformation) {
		this.aspectRatioInformation = aspectRatioInformation;
	}

	public DisplayScreenInformation displayPanelBacklightType(String displayPanelBacklightType) {
		this.displayPanelBacklightType = displayPanelBacklightType;
		return this;
	}

	/**
	 * Get displayPanelBacklightType
	 * 
	 * @return displayPanelBacklightType
	 **/
	@ApiModelProperty(value = "")
	public String getDisplayPanelBacklightType() {
		return displayPanelBacklightType;
	}

	public void setDisplayPanelBacklightType(String displayPanelBacklightType) {
		this.displayPanelBacklightType = displayPanelBacklightType;
	}

	public DisplayScreenInformation displayResolutionCode(CodifiedValue displayResolutionCode) {
		this.displayResolutionCode = displayResolutionCode;
		return this;
	}

	/**
	 * Get displayResolutionCode
	 * 
	 * @return displayResolutionCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getDisplayResolutionCode() {
		return displayResolutionCode;
	}

	public void setDisplayResolutionCode(CodifiedValue displayResolutionCode) {
		this.displayResolutionCode = displayResolutionCode;
	}

	public DisplayScreenInformation displayScreenBezelSize(QualifiedValues displayScreenBezelSize) {
		this.displayScreenBezelSize = displayScreenBezelSize;
		return this;
	}

	/**
	 * Get displayScreenBezelSize
	 * 
	 * @return displayScreenBezelSize
	 **/
	@ApiModelProperty(value = "")
	public QualifiedValues getDisplayScreenBezelSize() {
		return displayScreenBezelSize;
	}

	public void setDisplayScreenBezelSize(QualifiedValues displayScreenBezelSize) {
		this.displayScreenBezelSize = displayScreenBezelSize;
	}

	public DisplayScreenInformation displayScreenSize(QualifiedValues displayScreenSize) {
		this.displayScreenSize = displayScreenSize;
		return this;
	}

	/**
	 * Get displayScreenSize
	 * 
	 * @return displayScreenSize
	 **/
	@ApiModelProperty(value = "")
	public QualifiedValues getDisplayScreenSize() {
		return displayScreenSize;
	}

	public void setDisplayScreenSize(QualifiedValues displayScreenSize) {
		this.displayScreenSize = displayScreenSize;
	}

	public DisplayScreenInformation displayScreenTypeCode(CodifiedValue displayScreenTypeCode) {
		this.displayScreenTypeCode = displayScreenTypeCode;
		return this;
	}

	/**
	 * Get displayScreenTypeCode
	 * 
	 * @return displayScreenTypeCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getDisplayScreenTypeCode() {
		return displayScreenTypeCode;
	}

	public void setDisplayScreenTypeCode(CodifiedValue displayScreenTypeCode) {
		this.displayScreenTypeCode = displayScreenTypeCode;
	}

	public DisplayScreenInformation horizontalViewingAngle(String horizontalViewingAngle) {
		this.horizontalViewingAngle = horizontalViewingAngle;
		return this;
	}

	/**
	 * Get horizontalViewingAngle
	 * 
	 * @return horizontalViewingAngle
	 **/
	@ApiModelProperty(value = "")
	public String getHorizontalViewingAngle() {
		return horizontalViewingAngle;
	}

	public void setHorizontalViewingAngle(String horizontalViewingAngle) {
		this.horizontalViewingAngle = horizontalViewingAngle;
	}

	public DisplayScreenInformation totalScreenArea(QualifiedValues totalScreenArea) {
		this.totalScreenArea = totalScreenArea;
		return this;
	}

	/**
	 * Get totalScreenArea
	 * 
	 * @return totalScreenArea
	 **/
	@ApiModelProperty(value = "")
	public QualifiedValues getTotalScreenArea() {
		return totalScreenArea;
	}

	public void setTotalScreenArea(QualifiedValues totalScreenArea) {
		this.totalScreenArea = totalScreenArea;
	}

	public DisplayScreenInformation verticalViewingAngle(String verticalViewingAngle) {
		this.verticalViewingAngle = verticalViewingAngle;
		return this;
	}

	/**
	 * Get verticalViewingAngle
	 * 
	 * @return verticalViewingAngle
	 **/
	@ApiModelProperty(value = "")
	public String getVerticalViewingAngle() {
		return verticalViewingAngle;
	}

	public void setVerticalViewingAngle(String verticalViewingAngle) {
		this.verticalViewingAngle = verticalViewingAngle;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		DisplayScreenInformation displayScreenInformation = (DisplayScreenInformation) o;
		return Objects.equals(this.aspectRatioInformation, displayScreenInformation.aspectRatioInformation)
				&& Objects.equals(this.displayPanelBacklightType, displayScreenInformation.displayPanelBacklightType)
				&& Objects.equals(this.displayResolutionCode, displayScreenInformation.displayResolutionCode)
				&& Objects.equals(this.displayScreenBezelSize, displayScreenInformation.displayScreenBezelSize)
				&& Objects.equals(this.displayScreenSize, displayScreenInformation.displayScreenSize)
				&& Objects.equals(this.displayScreenTypeCode, displayScreenInformation.displayScreenTypeCode)
				&& Objects.equals(this.horizontalViewingAngle, displayScreenInformation.horizontalViewingAngle)
				&& Objects.equals(this.totalScreenArea, displayScreenInformation.totalScreenArea)
				&& Objects.equals(this.verticalViewingAngle, displayScreenInformation.verticalViewingAngle);
	}

	@Override
	public int hashCode() {
		return Objects.hash(aspectRatioInformation, displayPanelBacklightType, displayResolutionCode,
				displayScreenBezelSize, displayScreenSize, displayScreenTypeCode, horizontalViewingAngle,
				totalScreenArea, verticalViewingAngle);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class DisplayScreenInformation {\n");

		sb.append("    aspectRatioInformation: ").append(toIndentedString(aspectRatioInformation)).append("\n");
		sb.append("    displayPanelBacklightType: ").append(toIndentedString(displayPanelBacklightType)).append("\n");
		sb.append("    displayResolutionCode: ").append(toIndentedString(displayResolutionCode)).append("\n");
		sb.append("    displayScreenBezelSize: ").append(toIndentedString(displayScreenBezelSize)).append("\n");
		sb.append("    displayScreenSize: ").append(toIndentedString(displayScreenSize)).append("\n");
		sb.append("    displayScreenTypeCode: ").append(toIndentedString(displayScreenTypeCode)).append("\n");
		sb.append("    horizontalViewingAngle: ").append(toIndentedString(horizontalViewingAngle)).append("\n");
		sb.append("    totalScreenArea: ").append(toIndentedString(totalScreenArea)).append("\n");
		sb.append("    verticalViewingAngle: ").append(toIndentedString(verticalViewingAngle)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}

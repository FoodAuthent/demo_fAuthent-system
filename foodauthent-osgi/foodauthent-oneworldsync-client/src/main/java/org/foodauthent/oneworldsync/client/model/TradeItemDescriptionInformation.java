/*
 * 1WorldSync Content1 API
 * Content1 will provide access to accurate, trusted product data sourced directly from the Brand Owners through 1WorldSyncâ€™s APIs. This full set of product information is readily available to you through a set of web services, allowing you to get up-to-date, complete product information. <br/><br/>The following APIs are available<ul><li>Product Search API - Performs a search against the product data published in ContentNOW to find products that meet the supplied criteria. For each search result displayed, a basic set of information about the product is provided. While performing a product search only a subset from the entire list of attributes for an item will be returned.</li><li>Product Fetch API - Once a Product Search has been performed, the full set of atrribute information on a given product can be retrieved using the Product Fetch API and the item reference id (obtained through the search).</li></ul><p>This tool features a fully functional form which will call the Content1 API in real time.  To unlock the API call, you must have your client secret key provided through <a href=\"#\" onclick=\"openWindow('https://developer.1worldsync.com', 'Content1')\">developer.1worldsync.com</a>. Enter that key in the top right of this page to unlock the API calls used below.</p><p>Don't have a key but want to read the documenation? Go ahead! Basic API documentation is provided below.</p><div style=\"border: 1px solid transparent;color:#fff;background-color: #00ACC8;padding-left: 10px;height:30px;font-weight:bold;font-size:1.3em;margin:0;font-family: ProximaNova;padding-top:10px\">Search and Fetch Model Schemas</div><ul><li><a href=\"../doc/1WorldSync_Content1_Product_Search_Model_Schema_Guide_v3.1.6.1.pdf\" target=\"_blank\">Search Model Schema</a></li><li><a href=\"../doc/1WorldSync_Content1_Product_Fetch_Model_Schema_Guide_v3.1.6.6.pdf\" target=\"_blank\">Fetch Model Schema</a> </li></ul>
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.foodauthent.oneworldsync.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.foodauthent.oneworldsync.client.model.BrandNameInformation;
import org.foodauthent.oneworldsync.client.model.CodifiedValue;
import org.foodauthent.oneworldsync.client.model.CodifiedValues;
import org.foodauthent.oneworldsync.client.model.Colour;
import org.foodauthent.oneworldsync.client.model.LanguageLabels;
import org.foodauthent.oneworldsync.client.model.TradeItemGroupIdentificationCodeReference;
import org.foodauthent.oneworldsync.client.model.TradeItemVariant;
import org.foodauthent.oneworldsync.client.model.Values;

/**
 * TradeItemDescriptionInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-25T20:10:55.785Z")
public class TradeItemDescriptionInformation {
	@JsonProperty("additionalTradeItemDescription")
	private LanguageLabels additionalTradeItemDescription = null;

	@JsonProperty("brandNameInformation")
	private BrandNameInformation brandNameInformation = null;

	@JsonProperty("colour")
	private List<Colour> colour = null;

	@JsonProperty("descriptionShort")
	private LanguageLabels descriptionShort = null;

	@JsonProperty("functionalName")
	private LanguageLabels functionalName = null;

	@JsonProperty("invoiceName")
	private LanguageLabels invoiceName = null;

	@JsonProperty("isTradeItemDesignedToBeDivisible")
	private CodifiedValue isTradeItemDesignedToBeDivisible = null;

	@JsonProperty("labelDescription")
	private LanguageLabels labelDescription = null;

	@JsonProperty("productRange")
	private String productRange = null;

	@JsonProperty("regulatedProductName")
	private LanguageLabels regulatedProductName = null;

	@JsonProperty("tradeItemDescription")
	private LanguageLabels tradeItemDescription = null;

	@JsonProperty("tradeItemFormCode")
	private CodifiedValues tradeItemFormCode = null;

	@JsonProperty("tradeItemFormDescription")
	private Values tradeItemFormDescription = null;

	@JsonProperty("tradeItemGroupIdentificationCodeReference")
	private List<TradeItemGroupIdentificationCodeReference> tradeItemGroupIdentificationCodeReference = null;

	@JsonProperty("tradeItemVariant")
	private List<TradeItemVariant> tradeItemVariant = null;

	@JsonProperty("variantDescription")
	private LanguageLabels variantDescription = null;

	public TradeItemDescriptionInformation additionalTradeItemDescription(
			LanguageLabels additionalTradeItemDescription) {
		this.additionalTradeItemDescription = additionalTradeItemDescription;
		return this;
	}

	/**
	 * Get additionalTradeItemDescription
	 * 
	 * @return additionalTradeItemDescription
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getAdditionalTradeItemDescription() {
		return additionalTradeItemDescription;
	}

	public void setAdditionalTradeItemDescription(LanguageLabels additionalTradeItemDescription) {
		this.additionalTradeItemDescription = additionalTradeItemDescription;
	}

	public TradeItemDescriptionInformation brandNameInformation(BrandNameInformation brandNameInformation) {
		this.brandNameInformation = brandNameInformation;
		return this;
	}

	/**
	 * Get brandNameInformation
	 * 
	 * @return brandNameInformation
	 **/
	@ApiModelProperty(value = "")
	public BrandNameInformation getBrandNameInformation() {
		return brandNameInformation;
	}

	public void setBrandNameInformation(BrandNameInformation brandNameInformation) {
		this.brandNameInformation = brandNameInformation;
	}

	public TradeItemDescriptionInformation colour(List<Colour> colour) {
		this.colour = colour;
		return this;
	}

	public TradeItemDescriptionInformation addColourItem(Colour colourItem) {
		if (this.colour == null) {
			this.colour = new ArrayList<Colour>();
		}
		this.colour.add(colourItem);
		return this;
	}

	/**
	 * Get colour
	 * 
	 * @return colour
	 **/
	@ApiModelProperty(value = "")
	public List<Colour> getColour() {
		return colour;
	}

	public void setColour(List<Colour> colour) {
		this.colour = colour;
	}

	public TradeItemDescriptionInformation descriptionShort(LanguageLabels descriptionShort) {
		this.descriptionShort = descriptionShort;
		return this;
	}

	/**
	 * Get descriptionShort
	 * 
	 * @return descriptionShort
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getDescriptionShort() {
		return descriptionShort;
	}

	public void setDescriptionShort(LanguageLabels descriptionShort) {
		this.descriptionShort = descriptionShort;
	}

	public TradeItemDescriptionInformation functionalName(LanguageLabels functionalName) {
		this.functionalName = functionalName;
		return this;
	}

	/**
	 * Get functionalName
	 * 
	 * @return functionalName
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getFunctionalName() {
		return functionalName;
	}

	public void setFunctionalName(LanguageLabels functionalName) {
		this.functionalName = functionalName;
	}

	public TradeItemDescriptionInformation invoiceName(LanguageLabels invoiceName) {
		this.invoiceName = invoiceName;
		return this;
	}

	/**
	 * Get invoiceName
	 * 
	 * @return invoiceName
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getInvoiceName() {
		return invoiceName;
	}

	public void setInvoiceName(LanguageLabels invoiceName) {
		this.invoiceName = invoiceName;
	}

	public TradeItemDescriptionInformation isTradeItemDesignedToBeDivisible(
			CodifiedValue isTradeItemDesignedToBeDivisible) {
		this.isTradeItemDesignedToBeDivisible = isTradeItemDesignedToBeDivisible;
		return this;
	}

	/**
	 * Get isTradeItemDesignedToBeDivisible
	 * 
	 * @return isTradeItemDesignedToBeDivisible
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getIsTradeItemDesignedToBeDivisible() {
		return isTradeItemDesignedToBeDivisible;
	}

	public void setIsTradeItemDesignedToBeDivisible(CodifiedValue isTradeItemDesignedToBeDivisible) {
		this.isTradeItemDesignedToBeDivisible = isTradeItemDesignedToBeDivisible;
	}

	public TradeItemDescriptionInformation labelDescription(LanguageLabels labelDescription) {
		this.labelDescription = labelDescription;
		return this;
	}

	/**
	 * Get labelDescription
	 * 
	 * @return labelDescription
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getLabelDescription() {
		return labelDescription;
	}

	public void setLabelDescription(LanguageLabels labelDescription) {
		this.labelDescription = labelDescription;
	}

	public TradeItemDescriptionInformation productRange(String productRange) {
		this.productRange = productRange;
		return this;
	}

	/**
	 * Get productRange
	 * 
	 * @return productRange
	 **/
	@ApiModelProperty(value = "")
	public String getProductRange() {
		return productRange;
	}

	public void setProductRange(String productRange) {
		this.productRange = productRange;
	}

	public TradeItemDescriptionInformation regulatedProductName(LanguageLabels regulatedProductName) {
		this.regulatedProductName = regulatedProductName;
		return this;
	}

	/**
	 * Get regulatedProductName
	 * 
	 * @return regulatedProductName
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getRegulatedProductName() {
		return regulatedProductName;
	}

	public void setRegulatedProductName(LanguageLabels regulatedProductName) {
		this.regulatedProductName = regulatedProductName;
	}

	public TradeItemDescriptionInformation tradeItemDescription(LanguageLabels tradeItemDescription) {
		this.tradeItemDescription = tradeItemDescription;
		return this;
	}

	/**
	 * Get tradeItemDescription
	 * 
	 * @return tradeItemDescription
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getTradeItemDescription() {
		return tradeItemDescription;
	}

	public void setTradeItemDescription(LanguageLabels tradeItemDescription) {
		this.tradeItemDescription = tradeItemDescription;
	}

	public TradeItemDescriptionInformation tradeItemFormCode(CodifiedValues tradeItemFormCode) {
		this.tradeItemFormCode = tradeItemFormCode;
		return this;
	}

	/**
	 * Get tradeItemFormCode
	 * 
	 * @return tradeItemFormCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValues getTradeItemFormCode() {
		return tradeItemFormCode;
	}

	public void setTradeItemFormCode(CodifiedValues tradeItemFormCode) {
		this.tradeItemFormCode = tradeItemFormCode;
	}

	public TradeItemDescriptionInformation tradeItemFormDescription(Values tradeItemFormDescription) {
		this.tradeItemFormDescription = tradeItemFormDescription;
		return this;
	}

	/**
	 * Get tradeItemFormDescription
	 * 
	 * @return tradeItemFormDescription
	 **/
	@ApiModelProperty(value = "")
	public Values getTradeItemFormDescription() {
		return tradeItemFormDescription;
	}

	public void setTradeItemFormDescription(Values tradeItemFormDescription) {
		this.tradeItemFormDescription = tradeItemFormDescription;
	}

	public TradeItemDescriptionInformation tradeItemGroupIdentificationCodeReference(
			List<TradeItemGroupIdentificationCodeReference> tradeItemGroupIdentificationCodeReference) {
		this.tradeItemGroupIdentificationCodeReference = tradeItemGroupIdentificationCodeReference;
		return this;
	}

	public TradeItemDescriptionInformation addTradeItemGroupIdentificationCodeReferenceItem(
			TradeItemGroupIdentificationCodeReference tradeItemGroupIdentificationCodeReferenceItem) {
		if (this.tradeItemGroupIdentificationCodeReference == null) {
			this.tradeItemGroupIdentificationCodeReference = new ArrayList<TradeItemGroupIdentificationCodeReference>();
		}
		this.tradeItemGroupIdentificationCodeReference.add(tradeItemGroupIdentificationCodeReferenceItem);
		return this;
	}

	/**
	 * Get tradeItemGroupIdentificationCodeReference
	 * 
	 * @return tradeItemGroupIdentificationCodeReference
	 **/
	@ApiModelProperty(value = "")
	public List<TradeItemGroupIdentificationCodeReference> getTradeItemGroupIdentificationCodeReference() {
		return tradeItemGroupIdentificationCodeReference;
	}

	public void setTradeItemGroupIdentificationCodeReference(
			List<TradeItemGroupIdentificationCodeReference> tradeItemGroupIdentificationCodeReference) {
		this.tradeItemGroupIdentificationCodeReference = tradeItemGroupIdentificationCodeReference;
	}

	public TradeItemDescriptionInformation tradeItemVariant(List<TradeItemVariant> tradeItemVariant) {
		this.tradeItemVariant = tradeItemVariant;
		return this;
	}

	public TradeItemDescriptionInformation addTradeItemVariantItem(TradeItemVariant tradeItemVariantItem) {
		if (this.tradeItemVariant == null) {
			this.tradeItemVariant = new ArrayList<TradeItemVariant>();
		}
		this.tradeItemVariant.add(tradeItemVariantItem);
		return this;
	}

	/**
	 * Get tradeItemVariant
	 * 
	 * @return tradeItemVariant
	 **/
	@ApiModelProperty(value = "")
	public List<TradeItemVariant> getTradeItemVariant() {
		return tradeItemVariant;
	}

	public void setTradeItemVariant(List<TradeItemVariant> tradeItemVariant) {
		this.tradeItemVariant = tradeItemVariant;
	}

	public TradeItemDescriptionInformation variantDescription(LanguageLabels variantDescription) {
		this.variantDescription = variantDescription;
		return this;
	}

	/**
	 * Get variantDescription
	 * 
	 * @return variantDescription
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getVariantDescription() {
		return variantDescription;
	}

	public void setVariantDescription(LanguageLabels variantDescription) {
		this.variantDescription = variantDescription;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		TradeItemDescriptionInformation tradeItemDescriptionInformation = (TradeItemDescriptionInformation) o;
		return Objects.equals(this.additionalTradeItemDescription,
				tradeItemDescriptionInformation.additionalTradeItemDescription)
				&& Objects.equals(this.brandNameInformation, tradeItemDescriptionInformation.brandNameInformation)
				&& Objects.equals(this.colour, tradeItemDescriptionInformation.colour)
				&& Objects.equals(this.descriptionShort, tradeItemDescriptionInformation.descriptionShort)
				&& Objects.equals(this.functionalName, tradeItemDescriptionInformation.functionalName)
				&& Objects.equals(this.invoiceName, tradeItemDescriptionInformation.invoiceName)
				&& Objects.equals(this.isTradeItemDesignedToBeDivisible,
						tradeItemDescriptionInformation.isTradeItemDesignedToBeDivisible)
				&& Objects.equals(this.labelDescription, tradeItemDescriptionInformation.labelDescription)
				&& Objects.equals(this.productRange, tradeItemDescriptionInformation.productRange)
				&& Objects.equals(this.regulatedProductName, tradeItemDescriptionInformation.regulatedProductName)
				&& Objects.equals(this.tradeItemDescription, tradeItemDescriptionInformation.tradeItemDescription)
				&& Objects.equals(this.tradeItemFormCode, tradeItemDescriptionInformation.tradeItemFormCode)
				&& Objects.equals(this.tradeItemFormDescription,
						tradeItemDescriptionInformation.tradeItemFormDescription)
				&& Objects.equals(this.tradeItemGroupIdentificationCodeReference,
						tradeItemDescriptionInformation.tradeItemGroupIdentificationCodeReference)
				&& Objects.equals(this.tradeItemVariant, tradeItemDescriptionInformation.tradeItemVariant)
				&& Objects.equals(this.variantDescription, tradeItemDescriptionInformation.variantDescription);
	}

	@Override
	public int hashCode() {
		return Objects.hash(additionalTradeItemDescription, brandNameInformation, colour, descriptionShort,
				functionalName, invoiceName, isTradeItemDesignedToBeDivisible, labelDescription, productRange,
				regulatedProductName, tradeItemDescription, tradeItemFormCode, tradeItemFormDescription,
				tradeItemGroupIdentificationCodeReference, tradeItemVariant, variantDescription);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class TradeItemDescriptionInformation {\n");

		sb.append("    additionalTradeItemDescription: ").append(toIndentedString(additionalTradeItemDescription))
				.append("\n");
		sb.append("    brandNameInformation: ").append(toIndentedString(brandNameInformation)).append("\n");
		sb.append("    colour: ").append(toIndentedString(colour)).append("\n");
		sb.append("    descriptionShort: ").append(toIndentedString(descriptionShort)).append("\n");
		sb.append("    functionalName: ").append(toIndentedString(functionalName)).append("\n");
		sb.append("    invoiceName: ").append(toIndentedString(invoiceName)).append("\n");
		sb.append("    isTradeItemDesignedToBeDivisible: ").append(toIndentedString(isTradeItemDesignedToBeDivisible))
				.append("\n");
		sb.append("    labelDescription: ").append(toIndentedString(labelDescription)).append("\n");
		sb.append("    productRange: ").append(toIndentedString(productRange)).append("\n");
		sb.append("    regulatedProductName: ").append(toIndentedString(regulatedProductName)).append("\n");
		sb.append("    tradeItemDescription: ").append(toIndentedString(tradeItemDescription)).append("\n");
		sb.append("    tradeItemFormCode: ").append(toIndentedString(tradeItemFormCode)).append("\n");
		sb.append("    tradeItemFormDescription: ").append(toIndentedString(tradeItemFormDescription)).append("\n");
		sb.append("    tradeItemGroupIdentificationCodeReference: ")
				.append(toIndentedString(tradeItemGroupIdentificationCodeReference)).append("\n");
		sb.append("    tradeItemVariant: ").append(toIndentedString(tradeItemVariant)).append("\n");
		sb.append("    variantDescription: ").append(toIndentedString(variantDescription)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}

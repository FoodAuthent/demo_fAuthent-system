/*
 * 1WorldSync Content1 API
 * Content1 will provide access to accurate, trusted product data sourced directly from the Brand Owners through 1WorldSyncâ€™s APIs. This full set of product information is readily available to you through a set of web services, allowing you to get up-to-date, complete product information. <br/><br/>The following APIs are available<ul><li>Product Search API - Performs a search against the product data published in ContentNOW to find products that meet the supplied criteria. For each search result displayed, a basic set of information about the product is provided. While performing a product search only a subset from the entire list of attributes for an item will be returned.</li><li>Product Fetch API - Once a Product Search has been performed, the full set of atrribute information on a given product can be retrieved using the Product Fetch API and the item reference id (obtained through the search).</li></ul><p>This tool features a fully functional form which will call the Content1 API in real time.  To unlock the API call, you must have your client secret key provided through <a href=\"#\" onclick=\"openWindow('https://developer.1worldsync.com', 'Content1')\">developer.1worldsync.com</a>. Enter that key in the top right of this page to unlock the API calls used below.</p><p>Don't have a key but want to read the documenation? Go ahead! Basic API documentation is provided below.</p><div style=\"border: 1px solid transparent;color:#fff;background-color: #00ACC8;padding-left: 10px;height:30px;font-weight:bold;font-size:1.3em;margin:0;font-family: ProximaNova;padding-top:10px\">Search and Fetch Model Schemas</div><ul><li><a href=\"../doc/1WorldSync_Content1_Product_Search_Model_Schema_Guide_v3.1.6.1.pdf\" target=\"_blank\">Search Model Schema</a></li><li><a href=\"../doc/1WorldSync_Content1_Product_Fetch_Model_Schema_Guide_v3.1.6.6.pdf\" target=\"_blank\">Fetch Model Schema</a> </li></ul>
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.foodauthent.oneworldsync.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.foodauthent.oneworldsync.client.model.CodifiedValue;
import org.foodauthent.oneworldsync.client.model.CreditableGrain;
import org.foodauthent.oneworldsync.client.model.NoncreditableGrain;

/**
 * CreditableGrainsInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-25T20:10:55.785Z")
public class CreditableGrainsInformation {
	@JsonProperty("creditableGrain")
	private List<CreditableGrain> creditableGrain = null;

	@JsonProperty("creditableGrainAmountPerPortion")
	private String creditableGrainAmountPerPortion = null;

	@JsonProperty("creditableGrainStandard")
	private String creditableGrainStandard = null;

	@JsonProperty("doesTradeItemContainNoncreditableGrains")
	private CodifiedValue doesTradeItemContainNoncreditableGrains = null;

	@JsonProperty("doesTradeItemMeetWholeGrainRichCriteria")
	private CodifiedValue doesTradeItemMeetWholeGrainRichCriteria = null;

	@JsonProperty("noncreditableGrain")
	private List<NoncreditableGrain> noncreditableGrain = null;

	public CreditableGrainsInformation creditableGrain(List<CreditableGrain> creditableGrain) {
		this.creditableGrain = creditableGrain;
		return this;
	}

	public CreditableGrainsInformation addCreditableGrainItem(CreditableGrain creditableGrainItem) {
		if (this.creditableGrain == null) {
			this.creditableGrain = new ArrayList<CreditableGrain>();
		}
		this.creditableGrain.add(creditableGrainItem);
		return this;
	}

	/**
	 * Get creditableGrain
	 * 
	 * @return creditableGrain
	 **/
	@ApiModelProperty(value = "")
	public List<CreditableGrain> getCreditableGrain() {
		return creditableGrain;
	}

	public void setCreditableGrain(List<CreditableGrain> creditableGrain) {
		this.creditableGrain = creditableGrain;
	}

	public CreditableGrainsInformation creditableGrainAmountPerPortion(String creditableGrainAmountPerPortion) {
		this.creditableGrainAmountPerPortion = creditableGrainAmountPerPortion;
		return this;
	}

	/**
	 * Get creditableGrainAmountPerPortion
	 * 
	 * @return creditableGrainAmountPerPortion
	 **/
	@ApiModelProperty(value = "")
	public String getCreditableGrainAmountPerPortion() {
		return creditableGrainAmountPerPortion;
	}

	public void setCreditableGrainAmountPerPortion(String creditableGrainAmountPerPortion) {
		this.creditableGrainAmountPerPortion = creditableGrainAmountPerPortion;
	}

	public CreditableGrainsInformation creditableGrainStandard(String creditableGrainStandard) {
		this.creditableGrainStandard = creditableGrainStandard;
		return this;
	}

	/**
	 * Get creditableGrainStandard
	 * 
	 * @return creditableGrainStandard
	 **/
	@ApiModelProperty(value = "")
	public String getCreditableGrainStandard() {
		return creditableGrainStandard;
	}

	public void setCreditableGrainStandard(String creditableGrainStandard) {
		this.creditableGrainStandard = creditableGrainStandard;
	}

	public CreditableGrainsInformation doesTradeItemContainNoncreditableGrains(
			CodifiedValue doesTradeItemContainNoncreditableGrains) {
		this.doesTradeItemContainNoncreditableGrains = doesTradeItemContainNoncreditableGrains;
		return this;
	}

	/**
	 * Get doesTradeItemContainNoncreditableGrains
	 * 
	 * @return doesTradeItemContainNoncreditableGrains
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getDoesTradeItemContainNoncreditableGrains() {
		return doesTradeItemContainNoncreditableGrains;
	}

	public void setDoesTradeItemContainNoncreditableGrains(CodifiedValue doesTradeItemContainNoncreditableGrains) {
		this.doesTradeItemContainNoncreditableGrains = doesTradeItemContainNoncreditableGrains;
	}

	public CreditableGrainsInformation doesTradeItemMeetWholeGrainRichCriteria(
			CodifiedValue doesTradeItemMeetWholeGrainRichCriteria) {
		this.doesTradeItemMeetWholeGrainRichCriteria = doesTradeItemMeetWholeGrainRichCriteria;
		return this;
	}

	/**
	 * Get doesTradeItemMeetWholeGrainRichCriteria
	 * 
	 * @return doesTradeItemMeetWholeGrainRichCriteria
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getDoesTradeItemMeetWholeGrainRichCriteria() {
		return doesTradeItemMeetWholeGrainRichCriteria;
	}

	public void setDoesTradeItemMeetWholeGrainRichCriteria(CodifiedValue doesTradeItemMeetWholeGrainRichCriteria) {
		this.doesTradeItemMeetWholeGrainRichCriteria = doesTradeItemMeetWholeGrainRichCriteria;
	}

	public CreditableGrainsInformation noncreditableGrain(List<NoncreditableGrain> noncreditableGrain) {
		this.noncreditableGrain = noncreditableGrain;
		return this;
	}

	public CreditableGrainsInformation addNoncreditableGrainItem(NoncreditableGrain noncreditableGrainItem) {
		if (this.noncreditableGrain == null) {
			this.noncreditableGrain = new ArrayList<NoncreditableGrain>();
		}
		this.noncreditableGrain.add(noncreditableGrainItem);
		return this;
	}

	/**
	 * Get noncreditableGrain
	 * 
	 * @return noncreditableGrain
	 **/
	@ApiModelProperty(value = "")
	public List<NoncreditableGrain> getNoncreditableGrain() {
		return noncreditableGrain;
	}

	public void setNoncreditableGrain(List<NoncreditableGrain> noncreditableGrain) {
		this.noncreditableGrain = noncreditableGrain;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		CreditableGrainsInformation creditableGrainsInformation = (CreditableGrainsInformation) o;
		return Objects.equals(this.creditableGrain, creditableGrainsInformation.creditableGrain)
				&& Objects.equals(this.creditableGrainAmountPerPortion,
						creditableGrainsInformation.creditableGrainAmountPerPortion)
				&& Objects.equals(this.creditableGrainStandard, creditableGrainsInformation.creditableGrainStandard)
				&& Objects.equals(this.doesTradeItemContainNoncreditableGrains,
						creditableGrainsInformation.doesTradeItemContainNoncreditableGrains)
				&& Objects.equals(this.doesTradeItemMeetWholeGrainRichCriteria,
						creditableGrainsInformation.doesTradeItemMeetWholeGrainRichCriteria)
				&& Objects.equals(this.noncreditableGrain, creditableGrainsInformation.noncreditableGrain);
	}

	@Override
	public int hashCode() {
		return Objects.hash(creditableGrain, creditableGrainAmountPerPortion, creditableGrainStandard,
				doesTradeItemContainNoncreditableGrains, doesTradeItemMeetWholeGrainRichCriteria, noncreditableGrain);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class CreditableGrainsInformation {\n");

		sb.append("    creditableGrain: ").append(toIndentedString(creditableGrain)).append("\n");
		sb.append("    creditableGrainAmountPerPortion: ").append(toIndentedString(creditableGrainAmountPerPortion))
				.append("\n");
		sb.append("    creditableGrainStandard: ").append(toIndentedString(creditableGrainStandard)).append("\n");
		sb.append("    doesTradeItemContainNoncreditableGrains: ")
				.append(toIndentedString(doesTradeItemContainNoncreditableGrains)).append("\n");
		sb.append("    doesTradeItemMeetWholeGrainRichCriteria: ")
				.append(toIndentedString(doesTradeItemMeetWholeGrainRichCriteria)).append("\n");
		sb.append("    noncreditableGrain: ").append(toIndentedString(noncreditableGrain)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}

/*
 * 1WorldSync Content1 API
 * Content1 will provide access to accurate, trusted product data sourced directly from the Brand Owners through 1WorldSyncâ€™s APIs. This full set of product information is readily available to you through a set of web services, allowing you to get up-to-date, complete product information. <br/><br/>The following APIs are available<ul><li>Product Search API - Performs a search against the product data published in ContentNOW to find products that meet the supplied criteria. For each search result displayed, a basic set of information about the product is provided. While performing a product search only a subset from the entire list of attributes for an item will be returned.</li><li>Product Fetch API - Once a Product Search has been performed, the full set of atrribute information on a given product can be retrieved using the Product Fetch API and the item reference id (obtained through the search).</li></ul><p>This tool features a fully functional form which will call the Content1 API in real time.  To unlock the API call, you must have your client secret key provided through <a href=\"#\" onclick=\"openWindow('https://developer.1worldsync.com', 'Content1')\">developer.1worldsync.com</a>. Enter that key in the top right of this page to unlock the API calls used below.</p><p>Don't have a key but want to read the documenation? Go ahead! Basic API documentation is provided below.</p><div style=\"border: 1px solid transparent;color:#fff;background-color: #00ACC8;padding-left: 10px;height:30px;font-weight:bold;font-size:1.3em;margin:0;font-family: ProximaNova;padding-top:10px\">Search and Fetch Model Schemas</div><ul><li><a href=\"../doc/1WorldSync_Content1_Product_Search_Model_Schema_Guide_v3.1.6.1.pdf\" target=\"_blank\">Search Model Schema</a></li><li><a href=\"../doc/1WorldSync_Content1_Product_Fetch_Model_Schema_Guide_v3.1.6.6.pdf\" target=\"_blank\">Fetch Model Schema</a> </li></ul>
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.foodauthent.oneworldsync.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.foodauthent.oneworldsync.client.model.CodifiedValue;
import org.foodauthent.oneworldsync.client.model.CodifiedValues;
import org.foodauthent.oneworldsync.client.model.QualifiedValues;
import org.foodauthent.oneworldsync.client.model.TargetMarketDiscountRestrictions;
import org.foodauthent.oneworldsync.client.model.TargetMarketSalesConditions;

/**
 * SalesInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-25T20:10:55.785Z")
public class SalesInformation {
	@JsonProperty("brandDistributionTypeCode")
	private CodifiedValue brandDistributionTypeCode = null;

	@JsonProperty("consumerSalesConditionCode")
	private CodifiedValues consumerSalesConditionCode = null;

	@JsonProperty("cutForSaleThicknessCode")
	private CodifiedValue cutForSaleThicknessCode = null;

	@JsonProperty("isBasePriceDeclarationRelevant")
	private CodifiedValue isBasePriceDeclarationRelevant = null;

	@JsonProperty("isDiscountingIllegal")
	private CodifiedValue isDiscountingIllegal = null;

	@JsonProperty("isPermitOrLicenseRequiredToSell")
	private CodifiedValue isPermitOrLicenseRequiredToSell = null;

	@JsonProperty("minimumOrderValue")
	private QualifiedValues minimumOrderValue = null;

	@JsonProperty("priceByMeasureTypeCode")
	private CodifiedValue priceByMeasureTypeCode = null;

	@JsonProperty("priceComparisonContentTypeCode")
	private CodifiedValue priceComparisonContentTypeCode = null;

	@JsonProperty("priceComparisonMeasurement")
	private QualifiedValues priceComparisonMeasurement = null;

	@JsonProperty("recommendedConsumerPickupAreaCode")
	private CodifiedValue recommendedConsumerPickupAreaCode = null;

	@JsonProperty("sellingUnitOfMeasure")
	private String sellingUnitOfMeasure = null;

	@JsonProperty("targetMarketDiscountRestrictions")
	private List<TargetMarketDiscountRestrictions> targetMarketDiscountRestrictions = null;

	@JsonProperty("targetMarketSalesConditions")
	private List<TargetMarketSalesConditions> targetMarketSalesConditions = null;

	@JsonProperty("tradeItemConditionCode")
	private CodifiedValue tradeItemConditionCode = null;

	public SalesInformation brandDistributionTypeCode(CodifiedValue brandDistributionTypeCode) {
		this.brandDistributionTypeCode = brandDistributionTypeCode;
		return this;
	}

	/**
	 * Get brandDistributionTypeCode
	 * 
	 * @return brandDistributionTypeCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getBrandDistributionTypeCode() {
		return brandDistributionTypeCode;
	}

	public void setBrandDistributionTypeCode(CodifiedValue brandDistributionTypeCode) {
		this.brandDistributionTypeCode = brandDistributionTypeCode;
	}

	public SalesInformation consumerSalesConditionCode(CodifiedValues consumerSalesConditionCode) {
		this.consumerSalesConditionCode = consumerSalesConditionCode;
		return this;
	}

	/**
	 * Get consumerSalesConditionCode
	 * 
	 * @return consumerSalesConditionCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValues getConsumerSalesConditionCode() {
		return consumerSalesConditionCode;
	}

	public void setConsumerSalesConditionCode(CodifiedValues consumerSalesConditionCode) {
		this.consumerSalesConditionCode = consumerSalesConditionCode;
	}

	public SalesInformation cutForSaleThicknessCode(CodifiedValue cutForSaleThicknessCode) {
		this.cutForSaleThicknessCode = cutForSaleThicknessCode;
		return this;
	}

	/**
	 * Get cutForSaleThicknessCode
	 * 
	 * @return cutForSaleThicknessCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getCutForSaleThicknessCode() {
		return cutForSaleThicknessCode;
	}

	public void setCutForSaleThicknessCode(CodifiedValue cutForSaleThicknessCode) {
		this.cutForSaleThicknessCode = cutForSaleThicknessCode;
	}

	public SalesInformation isBasePriceDeclarationRelevant(CodifiedValue isBasePriceDeclarationRelevant) {
		this.isBasePriceDeclarationRelevant = isBasePriceDeclarationRelevant;
		return this;
	}

	/**
	 * Get isBasePriceDeclarationRelevant
	 * 
	 * @return isBasePriceDeclarationRelevant
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getIsBasePriceDeclarationRelevant() {
		return isBasePriceDeclarationRelevant;
	}

	public void setIsBasePriceDeclarationRelevant(CodifiedValue isBasePriceDeclarationRelevant) {
		this.isBasePriceDeclarationRelevant = isBasePriceDeclarationRelevant;
	}

	public SalesInformation isDiscountingIllegal(CodifiedValue isDiscountingIllegal) {
		this.isDiscountingIllegal = isDiscountingIllegal;
		return this;
	}

	/**
	 * Get isDiscountingIllegal
	 * 
	 * @return isDiscountingIllegal
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getIsDiscountingIllegal() {
		return isDiscountingIllegal;
	}

	public void setIsDiscountingIllegal(CodifiedValue isDiscountingIllegal) {
		this.isDiscountingIllegal = isDiscountingIllegal;
	}

	public SalesInformation isPermitOrLicenseRequiredToSell(CodifiedValue isPermitOrLicenseRequiredToSell) {
		this.isPermitOrLicenseRequiredToSell = isPermitOrLicenseRequiredToSell;
		return this;
	}

	/**
	 * Get isPermitOrLicenseRequiredToSell
	 * 
	 * @return isPermitOrLicenseRequiredToSell
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getIsPermitOrLicenseRequiredToSell() {
		return isPermitOrLicenseRequiredToSell;
	}

	public void setIsPermitOrLicenseRequiredToSell(CodifiedValue isPermitOrLicenseRequiredToSell) {
		this.isPermitOrLicenseRequiredToSell = isPermitOrLicenseRequiredToSell;
	}

	public SalesInformation minimumOrderValue(QualifiedValues minimumOrderValue) {
		this.minimumOrderValue = minimumOrderValue;
		return this;
	}

	/**
	 * Get minimumOrderValue
	 * 
	 * @return minimumOrderValue
	 **/
	@ApiModelProperty(value = "")
	public QualifiedValues getMinimumOrderValue() {
		return minimumOrderValue;
	}

	public void setMinimumOrderValue(QualifiedValues minimumOrderValue) {
		this.minimumOrderValue = minimumOrderValue;
	}

	public SalesInformation priceByMeasureTypeCode(CodifiedValue priceByMeasureTypeCode) {
		this.priceByMeasureTypeCode = priceByMeasureTypeCode;
		return this;
	}

	/**
	 * Get priceByMeasureTypeCode
	 * 
	 * @return priceByMeasureTypeCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getPriceByMeasureTypeCode() {
		return priceByMeasureTypeCode;
	}

	public void setPriceByMeasureTypeCode(CodifiedValue priceByMeasureTypeCode) {
		this.priceByMeasureTypeCode = priceByMeasureTypeCode;
	}

	public SalesInformation priceComparisonContentTypeCode(CodifiedValue priceComparisonContentTypeCode) {
		this.priceComparisonContentTypeCode = priceComparisonContentTypeCode;
		return this;
	}

	/**
	 * Get priceComparisonContentTypeCode
	 * 
	 * @return priceComparisonContentTypeCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getPriceComparisonContentTypeCode() {
		return priceComparisonContentTypeCode;
	}

	public void setPriceComparisonContentTypeCode(CodifiedValue priceComparisonContentTypeCode) {
		this.priceComparisonContentTypeCode = priceComparisonContentTypeCode;
	}

	public SalesInformation priceComparisonMeasurement(QualifiedValues priceComparisonMeasurement) {
		this.priceComparisonMeasurement = priceComparisonMeasurement;
		return this;
	}

	/**
	 * Get priceComparisonMeasurement
	 * 
	 * @return priceComparisonMeasurement
	 **/
	@ApiModelProperty(value = "")
	public QualifiedValues getPriceComparisonMeasurement() {
		return priceComparisonMeasurement;
	}

	public void setPriceComparisonMeasurement(QualifiedValues priceComparisonMeasurement) {
		this.priceComparisonMeasurement = priceComparisonMeasurement;
	}

	public SalesInformation recommendedConsumerPickupAreaCode(CodifiedValue recommendedConsumerPickupAreaCode) {
		this.recommendedConsumerPickupAreaCode = recommendedConsumerPickupAreaCode;
		return this;
	}

	/**
	 * Get recommendedConsumerPickupAreaCode
	 * 
	 * @return recommendedConsumerPickupAreaCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getRecommendedConsumerPickupAreaCode() {
		return recommendedConsumerPickupAreaCode;
	}

	public void setRecommendedConsumerPickupAreaCode(CodifiedValue recommendedConsumerPickupAreaCode) {
		this.recommendedConsumerPickupAreaCode = recommendedConsumerPickupAreaCode;
	}

	public SalesInformation sellingUnitOfMeasure(String sellingUnitOfMeasure) {
		this.sellingUnitOfMeasure = sellingUnitOfMeasure;
		return this;
	}

	/**
	 * Get sellingUnitOfMeasure
	 * 
	 * @return sellingUnitOfMeasure
	 **/
	@ApiModelProperty(value = "")
	public String getSellingUnitOfMeasure() {
		return sellingUnitOfMeasure;
	}

	public void setSellingUnitOfMeasure(String sellingUnitOfMeasure) {
		this.sellingUnitOfMeasure = sellingUnitOfMeasure;
	}

	public SalesInformation targetMarketDiscountRestrictions(
			List<TargetMarketDiscountRestrictions> targetMarketDiscountRestrictions) {
		this.targetMarketDiscountRestrictions = targetMarketDiscountRestrictions;
		return this;
	}

	public SalesInformation addTargetMarketDiscountRestrictionsItem(
			TargetMarketDiscountRestrictions targetMarketDiscountRestrictionsItem) {
		if (this.targetMarketDiscountRestrictions == null) {
			this.targetMarketDiscountRestrictions = new ArrayList<TargetMarketDiscountRestrictions>();
		}
		this.targetMarketDiscountRestrictions.add(targetMarketDiscountRestrictionsItem);
		return this;
	}

	/**
	 * Get targetMarketDiscountRestrictions
	 * 
	 * @return targetMarketDiscountRestrictions
	 **/
	@ApiModelProperty(value = "")
	public List<TargetMarketDiscountRestrictions> getTargetMarketDiscountRestrictions() {
		return targetMarketDiscountRestrictions;
	}

	public void setTargetMarketDiscountRestrictions(
			List<TargetMarketDiscountRestrictions> targetMarketDiscountRestrictions) {
		this.targetMarketDiscountRestrictions = targetMarketDiscountRestrictions;
	}

	public SalesInformation targetMarketSalesConditions(List<TargetMarketSalesConditions> targetMarketSalesConditions) {
		this.targetMarketSalesConditions = targetMarketSalesConditions;
		return this;
	}

	public SalesInformation addTargetMarketSalesConditionsItem(
			TargetMarketSalesConditions targetMarketSalesConditionsItem) {
		if (this.targetMarketSalesConditions == null) {
			this.targetMarketSalesConditions = new ArrayList<TargetMarketSalesConditions>();
		}
		this.targetMarketSalesConditions.add(targetMarketSalesConditionsItem);
		return this;
	}

	/**
	 * Get targetMarketSalesConditions
	 * 
	 * @return targetMarketSalesConditions
	 **/
	@ApiModelProperty(value = "")
	public List<TargetMarketSalesConditions> getTargetMarketSalesConditions() {
		return targetMarketSalesConditions;
	}

	public void setTargetMarketSalesConditions(List<TargetMarketSalesConditions> targetMarketSalesConditions) {
		this.targetMarketSalesConditions = targetMarketSalesConditions;
	}

	public SalesInformation tradeItemConditionCode(CodifiedValue tradeItemConditionCode) {
		this.tradeItemConditionCode = tradeItemConditionCode;
		return this;
	}

	/**
	 * Get tradeItemConditionCode
	 * 
	 * @return tradeItemConditionCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getTradeItemConditionCode() {
		return tradeItemConditionCode;
	}

	public void setTradeItemConditionCode(CodifiedValue tradeItemConditionCode) {
		this.tradeItemConditionCode = tradeItemConditionCode;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		SalesInformation salesInformation = (SalesInformation) o;
		return Objects.equals(this.brandDistributionTypeCode, salesInformation.brandDistributionTypeCode)
				&& Objects.equals(this.consumerSalesConditionCode, salesInformation.consumerSalesConditionCode)
				&& Objects.equals(this.cutForSaleThicknessCode, salesInformation.cutForSaleThicknessCode)
				&& Objects.equals(this.isBasePriceDeclarationRelevant, salesInformation.isBasePriceDeclarationRelevant)
				&& Objects.equals(this.isDiscountingIllegal, salesInformation.isDiscountingIllegal)
				&& Objects.equals(this.isPermitOrLicenseRequiredToSell,
						salesInformation.isPermitOrLicenseRequiredToSell)
				&& Objects.equals(this.minimumOrderValue, salesInformation.minimumOrderValue)
				&& Objects.equals(this.priceByMeasureTypeCode, salesInformation.priceByMeasureTypeCode)
				&& Objects.equals(this.priceComparisonContentTypeCode, salesInformation.priceComparisonContentTypeCode)
				&& Objects.equals(this.priceComparisonMeasurement, salesInformation.priceComparisonMeasurement)
				&& Objects.equals(this.recommendedConsumerPickupAreaCode,
						salesInformation.recommendedConsumerPickupAreaCode)
				&& Objects.equals(this.sellingUnitOfMeasure, salesInformation.sellingUnitOfMeasure)
				&& Objects.equals(this.targetMarketDiscountRestrictions,
						salesInformation.targetMarketDiscountRestrictions)
				&& Objects.equals(this.targetMarketSalesConditions, salesInformation.targetMarketSalesConditions)
				&& Objects.equals(this.tradeItemConditionCode, salesInformation.tradeItemConditionCode);
	}

	@Override
	public int hashCode() {
		return Objects.hash(brandDistributionTypeCode, consumerSalesConditionCode, cutForSaleThicknessCode,
				isBasePriceDeclarationRelevant, isDiscountingIllegal, isPermitOrLicenseRequiredToSell,
				minimumOrderValue, priceByMeasureTypeCode, priceComparisonContentTypeCode, priceComparisonMeasurement,
				recommendedConsumerPickupAreaCode, sellingUnitOfMeasure, targetMarketDiscountRestrictions,
				targetMarketSalesConditions, tradeItemConditionCode);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class SalesInformation {\n");

		sb.append("    brandDistributionTypeCode: ").append(toIndentedString(brandDistributionTypeCode)).append("\n");
		sb.append("    consumerSalesConditionCode: ").append(toIndentedString(consumerSalesConditionCode)).append("\n");
		sb.append("    cutForSaleThicknessCode: ").append(toIndentedString(cutForSaleThicknessCode)).append("\n");
		sb.append("    isBasePriceDeclarationRelevant: ").append(toIndentedString(isBasePriceDeclarationRelevant))
				.append("\n");
		sb.append("    isDiscountingIllegal: ").append(toIndentedString(isDiscountingIllegal)).append("\n");
		sb.append("    isPermitOrLicenseRequiredToSell: ").append(toIndentedString(isPermitOrLicenseRequiredToSell))
				.append("\n");
		sb.append("    minimumOrderValue: ").append(toIndentedString(minimumOrderValue)).append("\n");
		sb.append("    priceByMeasureTypeCode: ").append(toIndentedString(priceByMeasureTypeCode)).append("\n");
		sb.append("    priceComparisonContentTypeCode: ").append(toIndentedString(priceComparisonContentTypeCode))
				.append("\n");
		sb.append("    priceComparisonMeasurement: ").append(toIndentedString(priceComparisonMeasurement)).append("\n");
		sb.append("    recommendedConsumerPickupAreaCode: ").append(toIndentedString(recommendedConsumerPickupAreaCode))
				.append("\n");
		sb.append("    sellingUnitOfMeasure: ").append(toIndentedString(sellingUnitOfMeasure)).append("\n");
		sb.append("    targetMarketDiscountRestrictions: ").append(toIndentedString(targetMarketDiscountRestrictions))
				.append("\n");
		sb.append("    targetMarketSalesConditions: ").append(toIndentedString(targetMarketSalesConditions))
				.append("\n");
		sb.append("    tradeItemConditionCode: ").append(toIndentedString(tradeItemConditionCode)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}

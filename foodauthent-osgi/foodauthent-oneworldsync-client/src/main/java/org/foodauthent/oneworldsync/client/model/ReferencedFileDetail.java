/*
 * 1WorldSync Content1 API
 * Content1 will provide access to accurate, trusted product data sourced directly from the Brand Owners through 1WorldSyncâ€™s APIs. This full set of product information is readily available to you through a set of web services, allowing you to get up-to-date, complete product information. <br/><br/>The following APIs are available<ul><li>Product Search API - Performs a search against the product data published in ContentNOW to find products that meet the supplied criteria. For each search result displayed, a basic set of information about the product is provided. While performing a product search only a subset from the entire list of attributes for an item will be returned.</li><li>Product Fetch API - Once a Product Search has been performed, the full set of atrribute information on a given product can be retrieved using the Product Fetch API and the item reference id (obtained through the search).</li></ul><p>This tool features a fully functional form which will call the Content1 API in real time.  To unlock the API call, you must have your client secret key provided through <a href=\"#\" onclick=\"openWindow('https://developer.1worldsync.com', 'Content1')\">developer.1worldsync.com</a>. Enter that key in the top right of this page to unlock the API calls used below.</p><p>Don't have a key but want to read the documenation? Go ahead! Basic API documentation is provided below.</p><div style=\"border: 1px solid transparent;color:#fff;background-color: #00ACC8;padding-left: 10px;height:30px;font-weight:bold;font-size:1.3em;margin:0;font-family: ProximaNova;padding-top:10px\">Search and Fetch Model Schemas</div><ul><li><a href=\"../doc/1WorldSync_Content1_Product_Search_Model_Schema_Guide_v3.1.6.1.pdf\" target=\"_blank\">Search Model Schema</a></li><li><a href=\"../doc/1WorldSync_Content1_Product_Fetch_Model_Schema_Guide_v3.1.6.6.pdf\" target=\"_blank\">Fetch Model Schema</a> </li></ul>
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.foodauthent.oneworldsync.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.foodauthent.oneworldsync.client.model.CodifiedValue;
import org.foodauthent.oneworldsync.client.model.FileContentInformation;
import org.foodauthent.oneworldsync.client.model.FileUsageInformation;
import org.foodauthent.oneworldsync.client.model.LanguageLabels;
import org.foodauthent.oneworldsync.client.model.QualifiedValues;
import org.foodauthent.oneworldsync.client.model.Values;

/**
 * ReferencedFileDetail
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-25T20:10:55.785Z")
public class ReferencedFileDetail {
	@JsonProperty("canFileStream")
	private CodifiedValue canFileStream = null;

	@JsonProperty("fileAspectRatio")
	private String fileAspectRatio = null;

	@JsonProperty("fileBackgroundColourDescription")
	private LanguageLabels fileBackgroundColourDescription = null;

	@JsonProperty("fileColourCalibration")
	private LanguageLabels fileColourCalibration = null;

	@JsonProperty("fileColourSchemeCode")
	private CodifiedValue fileColourSchemeCode = null;

	@JsonProperty("fileCompressionType")
	private LanguageLabels fileCompressionType = null;

	@JsonProperty("fileContentInformation")
	private FileContentInformation fileContentInformation = null;

	@JsonProperty("fileContrast")
	private Values fileContrast = null;

	@JsonProperty("filePixelHeight")
	private String filePixelHeight = null;

	@JsonProperty("filePixelWidth")
	private String filePixelWidth = null;

	@JsonProperty("filePlaybackRate")
	private String filePlaybackRate = null;

	@JsonProperty("filePrintHeight")
	private QualifiedValues filePrintHeight = null;

	@JsonProperty("filePrintWidth")
	private QualifiedValues filePrintWidth = null;

	@JsonProperty("fileResolutionDescription")
	private LanguageLabels fileResolutionDescription = null;

	@JsonProperty("fileRunTime")
	private String fileRunTime = null;

	@JsonProperty("fileSize")
	private QualifiedValues fileSize = null;

	@JsonProperty("fileUsageInformation")
	private FileUsageInformation fileUsageInformation = null;

	@JsonProperty("isFileBackgroundTransparent")
	private CodifiedValue isFileBackgroundTransparent = null;

	@JsonProperty("primaryImage")
	private CodifiedValue primaryImage = null;

	public ReferencedFileDetail canFileStream(CodifiedValue canFileStream) {
		this.canFileStream = canFileStream;
		return this;
	}

	/**
	 * Get canFileStream
	 * 
	 * @return canFileStream
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getCanFileStream() {
		return canFileStream;
	}

	public void setCanFileStream(CodifiedValue canFileStream) {
		this.canFileStream = canFileStream;
	}

	public ReferencedFileDetail fileAspectRatio(String fileAspectRatio) {
		this.fileAspectRatio = fileAspectRatio;
		return this;
	}

	/**
	 * Get fileAspectRatio
	 * 
	 * @return fileAspectRatio
	 **/
	@ApiModelProperty(value = "")
	public String getFileAspectRatio() {
		return fileAspectRatio;
	}

	public void setFileAspectRatio(String fileAspectRatio) {
		this.fileAspectRatio = fileAspectRatio;
	}

	public ReferencedFileDetail fileBackgroundColourDescription(LanguageLabels fileBackgroundColourDescription) {
		this.fileBackgroundColourDescription = fileBackgroundColourDescription;
		return this;
	}

	/**
	 * Get fileBackgroundColourDescription
	 * 
	 * @return fileBackgroundColourDescription
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getFileBackgroundColourDescription() {
		return fileBackgroundColourDescription;
	}

	public void setFileBackgroundColourDescription(LanguageLabels fileBackgroundColourDescription) {
		this.fileBackgroundColourDescription = fileBackgroundColourDescription;
	}

	public ReferencedFileDetail fileColourCalibration(LanguageLabels fileColourCalibration) {
		this.fileColourCalibration = fileColourCalibration;
		return this;
	}

	/**
	 * Get fileColourCalibration
	 * 
	 * @return fileColourCalibration
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getFileColourCalibration() {
		return fileColourCalibration;
	}

	public void setFileColourCalibration(LanguageLabels fileColourCalibration) {
		this.fileColourCalibration = fileColourCalibration;
	}

	public ReferencedFileDetail fileColourSchemeCode(CodifiedValue fileColourSchemeCode) {
		this.fileColourSchemeCode = fileColourSchemeCode;
		return this;
	}

	/**
	 * Get fileColourSchemeCode
	 * 
	 * @return fileColourSchemeCode
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getFileColourSchemeCode() {
		return fileColourSchemeCode;
	}

	public void setFileColourSchemeCode(CodifiedValue fileColourSchemeCode) {
		this.fileColourSchemeCode = fileColourSchemeCode;
	}

	public ReferencedFileDetail fileCompressionType(LanguageLabels fileCompressionType) {
		this.fileCompressionType = fileCompressionType;
		return this;
	}

	/**
	 * Get fileCompressionType
	 * 
	 * @return fileCompressionType
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getFileCompressionType() {
		return fileCompressionType;
	}

	public void setFileCompressionType(LanguageLabels fileCompressionType) {
		this.fileCompressionType = fileCompressionType;
	}

	public ReferencedFileDetail fileContentInformation(FileContentInformation fileContentInformation) {
		this.fileContentInformation = fileContentInformation;
		return this;
	}

	/**
	 * Get fileContentInformation
	 * 
	 * @return fileContentInformation
	 **/
	@ApiModelProperty(value = "")
	public FileContentInformation getFileContentInformation() {
		return fileContentInformation;
	}

	public void setFileContentInformation(FileContentInformation fileContentInformation) {
		this.fileContentInformation = fileContentInformation;
	}

	public ReferencedFileDetail fileContrast(Values fileContrast) {
		this.fileContrast = fileContrast;
		return this;
	}

	/**
	 * Get fileContrast
	 * 
	 * @return fileContrast
	 **/
	@ApiModelProperty(value = "")
	public Values getFileContrast() {
		return fileContrast;
	}

	public void setFileContrast(Values fileContrast) {
		this.fileContrast = fileContrast;
	}

	public ReferencedFileDetail filePixelHeight(String filePixelHeight) {
		this.filePixelHeight = filePixelHeight;
		return this;
	}

	/**
	 * Get filePixelHeight
	 * 
	 * @return filePixelHeight
	 **/
	@ApiModelProperty(value = "")
	public String getFilePixelHeight() {
		return filePixelHeight;
	}

	public void setFilePixelHeight(String filePixelHeight) {
		this.filePixelHeight = filePixelHeight;
	}

	public ReferencedFileDetail filePixelWidth(String filePixelWidth) {
		this.filePixelWidth = filePixelWidth;
		return this;
	}

	/**
	 * Get filePixelWidth
	 * 
	 * @return filePixelWidth
	 **/
	@ApiModelProperty(value = "")
	public String getFilePixelWidth() {
		return filePixelWidth;
	}

	public void setFilePixelWidth(String filePixelWidth) {
		this.filePixelWidth = filePixelWidth;
	}

	public ReferencedFileDetail filePlaybackRate(String filePlaybackRate) {
		this.filePlaybackRate = filePlaybackRate;
		return this;
	}

	/**
	 * Get filePlaybackRate
	 * 
	 * @return filePlaybackRate
	 **/
	@ApiModelProperty(value = "")
	public String getFilePlaybackRate() {
		return filePlaybackRate;
	}

	public void setFilePlaybackRate(String filePlaybackRate) {
		this.filePlaybackRate = filePlaybackRate;
	}

	public ReferencedFileDetail filePrintHeight(QualifiedValues filePrintHeight) {
		this.filePrintHeight = filePrintHeight;
		return this;
	}

	/**
	 * Get filePrintHeight
	 * 
	 * @return filePrintHeight
	 **/
	@ApiModelProperty(value = "")
	public QualifiedValues getFilePrintHeight() {
		return filePrintHeight;
	}

	public void setFilePrintHeight(QualifiedValues filePrintHeight) {
		this.filePrintHeight = filePrintHeight;
	}

	public ReferencedFileDetail filePrintWidth(QualifiedValues filePrintWidth) {
		this.filePrintWidth = filePrintWidth;
		return this;
	}

	/**
	 * Get filePrintWidth
	 * 
	 * @return filePrintWidth
	 **/
	@ApiModelProperty(value = "")
	public QualifiedValues getFilePrintWidth() {
		return filePrintWidth;
	}

	public void setFilePrintWidth(QualifiedValues filePrintWidth) {
		this.filePrintWidth = filePrintWidth;
	}

	public ReferencedFileDetail fileResolutionDescription(LanguageLabels fileResolutionDescription) {
		this.fileResolutionDescription = fileResolutionDescription;
		return this;
	}

	/**
	 * Get fileResolutionDescription
	 * 
	 * @return fileResolutionDescription
	 **/
	@ApiModelProperty(value = "")
	public LanguageLabels getFileResolutionDescription() {
		return fileResolutionDescription;
	}

	public void setFileResolutionDescription(LanguageLabels fileResolutionDescription) {
		this.fileResolutionDescription = fileResolutionDescription;
	}

	public ReferencedFileDetail fileRunTime(String fileRunTime) {
		this.fileRunTime = fileRunTime;
		return this;
	}

	/**
	 * Get fileRunTime
	 * 
	 * @return fileRunTime
	 **/
	@ApiModelProperty(value = "")
	public String getFileRunTime() {
		return fileRunTime;
	}

	public void setFileRunTime(String fileRunTime) {
		this.fileRunTime = fileRunTime;
	}

	public ReferencedFileDetail fileSize(QualifiedValues fileSize) {
		this.fileSize = fileSize;
		return this;
	}

	/**
	 * Get fileSize
	 * 
	 * @return fileSize
	 **/
	@ApiModelProperty(value = "")
	public QualifiedValues getFileSize() {
		return fileSize;
	}

	public void setFileSize(QualifiedValues fileSize) {
		this.fileSize = fileSize;
	}

	public ReferencedFileDetail fileUsageInformation(FileUsageInformation fileUsageInformation) {
		this.fileUsageInformation = fileUsageInformation;
		return this;
	}

	/**
	 * Get fileUsageInformation
	 * 
	 * @return fileUsageInformation
	 **/
	@ApiModelProperty(value = "")
	public FileUsageInformation getFileUsageInformation() {
		return fileUsageInformation;
	}

	public void setFileUsageInformation(FileUsageInformation fileUsageInformation) {
		this.fileUsageInformation = fileUsageInformation;
	}

	public ReferencedFileDetail isFileBackgroundTransparent(CodifiedValue isFileBackgroundTransparent) {
		this.isFileBackgroundTransparent = isFileBackgroundTransparent;
		return this;
	}

	/**
	 * Get isFileBackgroundTransparent
	 * 
	 * @return isFileBackgroundTransparent
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getIsFileBackgroundTransparent() {
		return isFileBackgroundTransparent;
	}

	public void setIsFileBackgroundTransparent(CodifiedValue isFileBackgroundTransparent) {
		this.isFileBackgroundTransparent = isFileBackgroundTransparent;
	}

	public ReferencedFileDetail primaryImage(CodifiedValue primaryImage) {
		this.primaryImage = primaryImage;
		return this;
	}

	/**
	 * Get primaryImage
	 * 
	 * @return primaryImage
	 **/
	@ApiModelProperty(value = "")
	public CodifiedValue getPrimaryImage() {
		return primaryImage;
	}

	public void setPrimaryImage(CodifiedValue primaryImage) {
		this.primaryImage = primaryImage;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		ReferencedFileDetail referencedFileDetail = (ReferencedFileDetail) o;
		return Objects.equals(this.canFileStream, referencedFileDetail.canFileStream)
				&& Objects.equals(this.fileAspectRatio, referencedFileDetail.fileAspectRatio)
				&& Objects.equals(this.fileBackgroundColourDescription,
						referencedFileDetail.fileBackgroundColourDescription)
				&& Objects.equals(this.fileColourCalibration, referencedFileDetail.fileColourCalibration)
				&& Objects.equals(this.fileColourSchemeCode, referencedFileDetail.fileColourSchemeCode)
				&& Objects.equals(this.fileCompressionType, referencedFileDetail.fileCompressionType)
				&& Objects.equals(this.fileContentInformation, referencedFileDetail.fileContentInformation)
				&& Objects.equals(this.fileContrast, referencedFileDetail.fileContrast)
				&& Objects.equals(this.filePixelHeight, referencedFileDetail.filePixelHeight)
				&& Objects.equals(this.filePixelWidth, referencedFileDetail.filePixelWidth)
				&& Objects.equals(this.filePlaybackRate, referencedFileDetail.filePlaybackRate)
				&& Objects.equals(this.filePrintHeight, referencedFileDetail.filePrintHeight)
				&& Objects.equals(this.filePrintWidth, referencedFileDetail.filePrintWidth)
				&& Objects.equals(this.fileResolutionDescription, referencedFileDetail.fileResolutionDescription)
				&& Objects.equals(this.fileRunTime, referencedFileDetail.fileRunTime)
				&& Objects.equals(this.fileSize, referencedFileDetail.fileSize)
				&& Objects.equals(this.fileUsageInformation, referencedFileDetail.fileUsageInformation)
				&& Objects.equals(this.isFileBackgroundTransparent, referencedFileDetail.isFileBackgroundTransparent)
				&& Objects.equals(this.primaryImage, referencedFileDetail.primaryImage);
	}

	@Override
	public int hashCode() {
		return Objects.hash(canFileStream, fileAspectRatio, fileBackgroundColourDescription, fileColourCalibration,
				fileColourSchemeCode, fileCompressionType, fileContentInformation, fileContrast, filePixelHeight,
				filePixelWidth, filePlaybackRate, filePrintHeight, filePrintWidth, fileResolutionDescription,
				fileRunTime, fileSize, fileUsageInformation, isFileBackgroundTransparent, primaryImage);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class ReferencedFileDetail {\n");

		sb.append("    canFileStream: ").append(toIndentedString(canFileStream)).append("\n");
		sb.append("    fileAspectRatio: ").append(toIndentedString(fileAspectRatio)).append("\n");
		sb.append("    fileBackgroundColourDescription: ").append(toIndentedString(fileBackgroundColourDescription))
				.append("\n");
		sb.append("    fileColourCalibration: ").append(toIndentedString(fileColourCalibration)).append("\n");
		sb.append("    fileColourSchemeCode: ").append(toIndentedString(fileColourSchemeCode)).append("\n");
		sb.append("    fileCompressionType: ").append(toIndentedString(fileCompressionType)).append("\n");
		sb.append("    fileContentInformation: ").append(toIndentedString(fileContentInformation)).append("\n");
		sb.append("    fileContrast: ").append(toIndentedString(fileContrast)).append("\n");
		sb.append("    filePixelHeight: ").append(toIndentedString(filePixelHeight)).append("\n");
		sb.append("    filePixelWidth: ").append(toIndentedString(filePixelWidth)).append("\n");
		sb.append("    filePlaybackRate: ").append(toIndentedString(filePlaybackRate)).append("\n");
		sb.append("    filePrintHeight: ").append(toIndentedString(filePrintHeight)).append("\n");
		sb.append("    filePrintWidth: ").append(toIndentedString(filePrintWidth)).append("\n");
		sb.append("    fileResolutionDescription: ").append(toIndentedString(fileResolutionDescription)).append("\n");
		sb.append("    fileRunTime: ").append(toIndentedString(fileRunTime)).append("\n");
		sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
		sb.append("    fileUsageInformation: ").append(toIndentedString(fileUsageInformation)).append("\n");
		sb.append("    isFileBackgroundTransparent: ").append(toIndentedString(isFileBackgroundTransparent))
				.append("\n");
		sb.append("    primaryImage: ").append(toIndentedString(primaryImage)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}

/**
 * FoodAuthent Swagger API
 * This is the FoodAuthent API Description [www.foodauthent.net]
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@foodauthent.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['../ApiClient', '../model/FingerprintSet', '../model/WorkflowModuleInput', '../model/WorkflowParameter'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./FingerprintSet'), require('./WorkflowModuleInput'), require('./WorkflowParameter'));
  } else {
    // Browser globals (root is window)
    if (!root.FoodAuthentSwaggerApi) {
      root.FoodAuthentSwaggerApi = {};
    }
    root.FoodAuthentSwaggerApi.PredictionWorkflowInput = factory(root.FoodAuthentSwaggerApi.ApiClient, root.FoodAuthentSwaggerApi.FingerprintSet, root.FoodAuthentSwaggerApi.WorkflowModuleInput, root.FoodAuthentSwaggerApi.WorkflowParameter);
  }
}(this, function(ApiClient, FingerprintSet, WorkflowModuleInput, WorkflowParameter) {
  'use strict';




  /**
   * The PredictionWorkflowInput model module.
   * @module model/PredictionWorkflowInput
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>PredictionWorkflowInput</code>.
   * Describes the input required by a prediction workflow.
   * @alias module:model/PredictionWorkflowInput
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>PredictionWorkflowInput</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PredictionWorkflowInput} obj Optional instance to populate.
   * @return {module:model/PredictionWorkflowInput} The populated <code>PredictionWorkflowInput</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('parameters')) {
        obj['parameters'] = ApiClient.convertToType(data['parameters'], [WorkflowParameter]);
      }
      if (data.hasOwnProperty('fingerprintset-metadata')) {
        obj['fingerprintset-metadata'] = FingerprintSet.constructFromObject(data['fingerprintset-metadata']);
      }
      if (data.hasOwnProperty('fingerprintset-URI')) {
        obj['fingerprintset-URI'] = ApiClient.convertToType(data['fingerprintset-URI'], 'String');
      }
      if (data.hasOwnProperty('model-URI')) {
        obj['model-URI'] = ApiClient.convertToType(data['model-URI'], 'String');
      }
      if (data.hasOwnProperty('module-inputs')) {
        obj['module-inputs'] = ApiClient.convertToType(data['module-inputs'], [WorkflowModuleInput]);
      }
    }
    return obj;
  }

  /**
   * The workflow parameters as given provided by the Workflow-entity.
   * @member {Array.<module:model/WorkflowParameter>} parameters
   */
  exports.prototype['parameters'] = undefined;
  /**
   * The fingerprint set metadata.
   * @member {module:model/FingerprintSet} fingerprintset-metadata
   */
  exports.prototype['fingerprintset-metadata'] = undefined;
  /**
   * URI pointing to the resource containg the fingerprints to predict the labels for.
   * @member {String} fingerprintset-URI
   */
  exports.prototype['fingerprintset-URI'] = undefined;
  /**
   * optional model uri (if required by the workflow) pointing to the model to use
   * @member {String} model-URI
   */
  exports.prototype['model-URI'] = undefined;
  /**
   * optional list of modules used within the prediction workfow.
   * @member {Array.<module:model/WorkflowModuleInput>} module-inputs
   */
  exports.prototype['module-inputs'] = undefined;



  return exports;
}));



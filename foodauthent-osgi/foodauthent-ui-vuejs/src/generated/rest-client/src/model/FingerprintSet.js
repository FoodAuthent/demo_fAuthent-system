/**
 * FoodAuthent Swagger API
 * This is the FoodAuthent API Description [www.foodauthent.net]
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@foodauthent.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.3.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['../ApiClient', '../model/Fingerprint', '../model/FingerprintSetType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Fingerprint'), require('./FingerprintSetType'));
  } else {
    // Browser globals (root is window)
    if (!root.FoodAuthentSwaggerApi) {
      root.FoodAuthentSwaggerApi = {};
    }
    root.FoodAuthentSwaggerApi.FingerprintSet = factory(root.FoodAuthentSwaggerApi.ApiClient, root.FoodAuthentSwaggerApi.Fingerprint, root.FoodAuthentSwaggerApi.FingerprintSetType);
  }
}(this, function(ApiClient, Fingerprint, FingerprintSetType) {
  'use strict';



  /**
   * The FingerprintSet model module.
   * @module model/FingerprintSet
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>FingerprintSet</code>.
   * A set of fingerprints with its own id.
   * @alias module:model/FingerprintSet
   * @class
   * @param productId {String} The fa-id of the product all fingerprints are associated with.
   * @param fileId {String} Id referencing the fingerpint-set file.
   * @param type {module:model/FingerprintSetType} 
   */
  var exports = function(productId, fileId, type) {
    var _this = this;

    _this['product-id'] = productId;
    _this['file-id'] = fileId;
    _this['type'] = type;
  };

  /**
   * Constructs a <code>FingerprintSet</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FingerprintSet} obj Optional instance to populate.
   * @return {module:model/FingerprintSet} The populated <code>FingerprintSet</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('fa-id')) {
        obj['fa-id'] = ApiClient.convertToType(data['fa-id'], 'String');
      }
      if (data.hasOwnProperty('product-id')) {
        obj['product-id'] = ApiClient.convertToType(data['product-id'], 'String');
      }
      if (data.hasOwnProperty('fingerprints')) {
        obj['fingerprints'] = ApiClient.convertToType(data['fingerprints'], [Fingerprint]);
      }
      if (data.hasOwnProperty('file-id')) {
        obj['file-id'] = ApiClient.convertToType(data['file-id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = FingerprintSetType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('class-label')) {
        obj['class-label'] = ApiClient.convertToType(data['class-label'], 'String');
      }
    }
    return obj;
  }

  /**
   * A global id within the FoodAuthent-system.
   * @member {String} fa-id
   */
  exports.prototype['fa-id'] = undefined;
  /**
   * The fa-id of the product all fingerprints are associated with.
   * @member {String} product-id
   */
  exports.prototype['product-id'] = undefined;
  /**
   * The fingerprints.
   * @member {Array.<module:model/Fingerprint>} fingerprints
   */
  exports.prototype['fingerprints'] = undefined;
  /**
   * Id referencing the fingerpint-set file.
   * @member {String} file-id
   */
  exports.prototype['file-id'] = undefined;
  /**
   * A human-readable name of the fingerprint set.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {module:model/FingerprintSetType} type
   */
<<<<<<< HEAD
  exports.prototype['type'] = undefined;
=======
  exports.prototype['description'] = undefined;
  /**
   * A class label associated with this fingerprint set.
   * @member {String} class-label
   */
  exports.prototype['class-label'] = undefined;
>>>>>>> master



  return exports;
}));



{{>licenseInfo}}
package {{package}};

import javax.ws.rs.*;
import javax.ws.rs.core.Response;

{{#imports}}
import {{import}};
{{/imports}}

{{#operations}}
import org.foodauthent.api.{{baseName}}Service;
import org.foodauthent.api.ServiceRegistry;

import org.foodauthent.rest.api.service.{{baseName}}RestService;

import org.foodauthent.common.exception.FAExceptions;

{{#appName}}
/**
 * {{{appName}}}
 *
 {{#appDescription}}
 * <p>{{{appDescription}}}
 {{/appDescription}}
 *
 * <p> {{tagDescription}}
 *
 {{>authors}}
 */
{{/appName}}
{{>generatedAnnotation}}
public class {{classname}} implements {{baseName}}RestService {

    private final {{baseName}}Service service = ServiceRegistry.get({{baseName}}Service.class);

{{#operation}}

    /**
     {{#notes}}
     * {{.}}
     {{/notes}}
     *
     {{#allParams}}
     * @param {{paramName}} {{description}}
     {{/allParams}}
     * @return the response
     */
    public Response {{nickname}}({{#allParams}}{{>serviceQueryParams}}{{>servicePathParams}}{{>serviceHeaderParams}}{{>serviceBodyParams}}{{>serviceFormParams}}{{^-last}}, {{/-last}}{{/allParams}}) {
        {{#vendorExtensions.x-fa-exceptions.0}}try { {{/vendorExtensions.x-fa-exceptions.0}}
            {{#returnType}}Object res = {{/returnType}}service.{{nickname}}({{>rest/paramNames}});
            {{#returnType}}return Response.ok(res).build();{{/returnType}}
            {{^returnType}}
                return Response.ok().build();
            {{/returnType}}
        {{#vendorExtensions.x-fa-exceptions}}
        } catch(FAExceptions.{{name}} e) {
           return Response.status({{code}}).entity(e.getMessage()).build();
        }
        {{/vendorExtensions.x-fa-exceptions}}
    }
{{/operation}}
}
{{/operations}}

